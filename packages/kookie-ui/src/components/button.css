/**
 * Button Component Styles
 * 
 * This file contains the core styling for the Button component, including
 * size variants, icon handling, and responsive design patterns. The styles
 * are built on top of the base button styles imported from _internal.
 * 
 * Key features:
 * - Responsive sizing with mobile-first approach
 * - Automatic icon sizing based on button size
 * - Ghost variant with specialized padding
 * - Consistent typography and spacing
 */

@import './_internal/base-button.css';

/* 
 * Button-specific styles that extend the base button
 * These styles handle icon opacity and specialized behaviors
 */

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 * Button sizes are designed for different interface densities and contexts:
 * - Size 1 (24px): Compact for toolbars and dense interfaces
 * - Size 2 (32px): Standard for most interface contexts  
 * - Size 3 (40px): Large for important actions and mobile touch targets
 * - Size 4 (48px): Extra large for hero sections and maximum impact
 *                                                                                                 *
 ***************************************************************************************************/

/* 
 * Ghost variant has specialized padding that differs from other variants
 * This creates a more subtle, text-like appearance
 */
.rt-Button {
  &:where(.rt-variant-ghost) {
    padding: var(--button-ghost-padding-y) var(--button-ghost-padding-x);
  }
}

@breakpoints {
  .rt-Button {
    /* 
     * Size 1: Compact (24px height)
     * Designed for toolbars, dense interfaces, and space-constrained contexts
     */
    &:where(.rt-r-size-1) {
      gap: var(--component-gap-1);
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);

      /* 
       * Icon sizing for size 1
       * Icons are automatically sized to match the button's scale
       */
      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-1);
        height: var(--content-icon-size-1);
      }

      /* 
       * Standard padding for non-ghost variants
       * Provides adequate touch targets while maintaining compact appearance
       */
      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-2);
        padding-right: var(--space-2);
      }

      /* 
       * Ghost variant padding for size 1
       * Reduced padding creates seamless text integration
       */
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-1);
        --button-ghost-padding-x: var(--space-2);
        --button-ghost-padding-y: var(--space-1);
      }
    }

    /* 
     * Size 2: Standard (32px height)
     * Default size for most interface contexts and general use
     */
    &:where(.rt-r-size-2) {
      gap: var(--component-gap-2);
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);

      /* Icon sizing for size 2 */
      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-2);
        height: var(--content-icon-size-2);
      }

      /* Standard padding for non-ghost variants */
      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-3);
        padding-right: var(--space-3);
      }

      /* Ghost variant padding for size 2 */
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-2);
        --button-ghost-padding-x: var(--space-2);
        --button-ghost-padding-y: var(--space-1);
      }
    }

    /* 
     * Size 3: Large (40px height)
     * Recommended for important actions and mobile touch targets
     */
    &:where(.rt-r-size-3) {
      gap: var(--component-gap-3);
      font-size: var(--font-size-3);
      line-height: var(--line-height-3);
      letter-spacing: var(--letter-spacing-3);

      /* Icon sizing for size 3 */
      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-3);
        height: var(--content-icon-size-3);
      }

      /* Standard padding for non-ghost variants */
      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-4);
        padding-right: var(--space-4);
      }

      /* Ghost variant padding for size 3 */
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-3);
        --button-ghost-padding-x: var(--space-3);
        --button-ghost-padding-y: calc(var(--space-1) * 1.5);
      }
    }

    /* 
     * Size 4: Extra Large (48px height)
     * Designed for hero sections and maximum visual impact
     */
    &:where(.rt-r-size-4) {
      gap: var(--component-gap-4);
      font-size: var(--font-size-4);
      line-height: var(--line-height-4);
      letter-spacing: var(--letter-spacing-4);

      /* Icon sizing for size 4 */
      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-4);
        height: var(--content-icon-size-4);
      }

      /* Standard padding for non-ghost variants */
      &:where(:not(.rt-variant-ghost)) {
        /**
         * HACK: This padding calculation adds 4px to the space-4 token for better visual balance at size 4.
         * This is a temporary workaround and should be replaced with a proper tokenized solution.
         */
        padding-left: calc(var(--space-4) + (4px * var(--scaling)));
        padding-right: calc(var(--space-4) + (4px * var(--scaling)));
      }

      /* Ghost variant padding for size 4 */
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-4);
        --button-ghost-padding-x: var(--space-4);
        --button-ghost-padding-y: var(--space-2);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 * Button variants provide different visual contexts and hierarchies:
 * - classic: Premium, sophisticated appearance
 * - solid: Primary actions that should be noticed first
 * - soft: Content-heavy interfaces, natural integration
 * - surface: Elevated appearance with subtle depth
 * - outline: Secondary actions that support primary actions
 * - ghost: Utility functions that don't compete for attention
 *                                                                                                 *
 ***************************************************************************************************/

/* 
 * Typography styling for all button variants
 * Ensures consistent font weight across all button types
 */
.rt-Button {
  font-weight: var(--font-weight-medium);
}
