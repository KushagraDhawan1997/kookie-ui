.rt-BaseMenuContent {
  --scrollarea-scrollbar-vertical-margin-top: var(--base-menu-content-padding);
  --scrollarea-scrollbar-vertical-margin-bottom: var(--base-menu-content-padding);
  --scrollarea-scrollbar-horizontal-margin-left: var(--base-menu-content-padding);
  --scrollarea-scrollbar-horizontal-margin-right: var(--base-menu-content-padding);

  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  overflow: hidden;

  background-color: var(--color-panel);
  backdrop-filter: var(--backdrop-filter-panel);
  box-shadow: var(--shadow-5);
  transition: var(--transition-background-blur);

  /* GPU optimization: limit paint scope and prevent backdrop-filter layering */
  contain: paint;
  isolation: isolate;

  /* Optimize backdrop-filter performance during animations */
  &:where([data-state='open']) {
    will-change: transform, opacity;
  }

  /* Enhanced reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
    will-change: auto;
    backdrop-filter: none; /* Remove blur for motion-sensitive users */
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--color-panel-solid);
    backdrop-filter: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--color-panel-translucent);
    backdrop-filter: var(--backdrop-filter-panel);
  }
}

.rt-BaseMenuViewport {
  flex: 1 1 0%;
  display: flex;
  flex-direction: column;
  overflow: auto;
  padding: var(--base-menu-content-padding);
  box-sizing: border-box;

  :where(.rt-BaseMenuContent:has(.rt-ScrollAreaScrollbar[data-orientation='vertical'])) & {
    padding-inline-end: var(--space-3);
  }
}

.rt-BaseMenuItem {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  min-height: var(--base-menu-item-height);
  padding-top: var(--base-menu-item-padding-y);
  padding-bottom: var(--base-menu-item-padding-y);
  padding-inline-start: var(--base-menu-item-padding-left);
  padding-inline-end: var(--base-menu-item-padding-right);
  box-sizing: border-box;
  position: relative;
  outline: none;
  scroll-margin: var(--base-menu-content-padding) 0;
  transition: var(--transition-menu);

  /* Fix sticky text highlighting after selection in Firefox */
  user-select: none;

  /* Cursors */
  cursor: var(--cursor-menu-item);
  &:where([data-disabled]) {
    cursor: default;
  }

  /* Focus-visible support */
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -2px;
  }

  /* Enhanced reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
    backdrop-filter: none; /* Remove any backdrop effects for motion-sensitive users */
  }
}

.rt-BaseMenuShortcut {
  display: flex;
  align-items: center;
  margin-inline-start: auto;
  padding-inline-start: var(--space-4);
  margin-inline-end: calc(-2px * var(--scaling)); /* Pulls closer to edge */
}

.rt-BaseMenuSubTriggerIcon {
  color: var(--gray-12);
  margin-inline-end: calc(-2px * var(--scaling));
}

.rt-BaseMenuItemIndicator {
  position: absolute;
  inset-inline-start: 0;
  width: var(--base-menu-item-padding-left);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.rt-BaseMenuSeparator {
  height: 1px;
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
  margin-inline-start: var(--base-menu-item-padding-left);
  margin-inline-end: var(--base-menu-item-padding-right);
}

.rt-BaseMenuLabel {
  display: flex;
  align-items: center;
  min-height: var(--base-menu-item-height);
  padding-top: var(--base-menu-item-padding-y);
  padding-bottom: var(--base-menu-item-padding-y);
  padding-inline-start: var(--base-menu-item-padding-left);
  padding-inline-end: var(--base-menu-item-padding-right);
  box-sizing: border-box;
  color: var(--gray-a10);
  user-select: none;
  cursor: default;

  :where(.rt-BaseMenuItem) + & {
    margin-top: var(--space-2);
  }
}

.rt-BaseMenuArrow {
  fill: var(--color-panel);

  /* Component-level overrides (higher specificity) */
  :where(.rt-BaseMenuContent[data-panel-background='solid']) & {
    fill: var(--color-panel-solid);
  }

  :where(.rt-BaseMenuContent[data-panel-background='translucent']) & {
    fill: var(--color-panel-translucent);
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-BaseMenuContent {
    &:where(.rt-r-size-1) {
      --base-menu-content-padding: var(--space-2);
      --base-menu-item-padding-left: calc(var(--space-5) / 1.2);
      --base-menu-item-padding-right: var(--space-2);
      --base-menu-item-padding-y: var(--space-1);
      --base-menu-item-height: var(--space-5);
      border-radius: var(--radius-3);

      & :where(.rt-BaseMenuItem) {
        gap: var(--component-gap-2);
        font-size: var(--font-size-1);
        line-height: var(--line-height-1);
        letter-spacing: var(--letter-spacing-1);
        border-radius: var(--radius-1);

        /* stylelint-disable-next-line selector-max-type */
        & :where(svg) {
          width: var(--content-icon-size-1);
          height: var(--content-icon-size-1);
          flex-shrink: 0;
        }
      }

      & :where(.rt-BaseMenuLabel) {
        font-size: var(--font-size-1);
        line-height: var(--line-height-1);
        letter-spacing: var(--letter-spacing-1);
        padding-inline-start: calc(var(--base-menu-item-padding-left) + var(--component-gap-2));
      }

      & :where(.rt-BaseMenuItemIndicatorIcon, .rt-BaseMenuSubTriggerIcon) {
        width: var(--indicator-icon-size-1);
        height: var(--indicator-icon-size-1);
      }

      /* reset with :not:has so we still support browsers without :has */
      &:where(:not(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem))) {
        --base-menu-item-padding-left: var(--space-2);
      }
      &:where(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem)) {
        --base-menu-item-padding-left: calc(var(--space-5) / 1.2);
      }
    }

    &:where(.rt-r-size-2) {
      --base-menu-content-padding: var(--space-3);
      --base-menu-item-padding-left: var(--space-3);
      --base-menu-item-padding-right: var(--space-3);
      --base-menu-item-padding-y: var(--space-1);
      --base-menu-item-height: var(--space-6);
      border-radius: var(--radius-5);

      & :where(.rt-BaseMenuItem) {
        gap: var(--component-gap-3);
        font-size: var(--font-size-2);
        line-height: var(--line-height-2);
        letter-spacing: var(--letter-spacing-2);
        border-radius: var(--radius-2);

        /* stylelint-disable-next-line selector-max-type */
        & :where(svg) {
          width: var(--content-icon-size-2);
          height: var(--content-icon-size-2);
          flex-shrink: 0;
        }
      }

      & :where(.rt-BaseMenuLabel) {
        font-size: var(--font-size-2);
        line-height: var(--line-height-2);
        letter-spacing: var(--letter-spacing-2);
        padding-left: calc(var(--base-menu-item-padding-left) + var(--component-gap-3));
      }

      & :where(.rt-BaseMenuItemIndicatorIcon, .rt-BaseMenuSubTriggerIcon) {
        width: var(--indicator-icon-size-2);
        height: var(--indicator-icon-size-2);
      }

      /* reset with :not:has so we still support browsers without :has */
      &:where(:not(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem))) {
        --base-menu-item-padding-left: var(--space-3);
      }
      &:where(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem)) {
        --base-menu-item-padding-left: var(--space-5);
      }
    }

    &:where(.rt-r-size-3) {
      --base-menu-content-padding: var(--space-3);
      --base-menu-item-padding-left: var(--space-3);
      --base-menu-item-padding-right: var(--space-3);
      --base-menu-item-padding-y: var(--space-2);
      --base-menu-item-height: var(--space-7);
      border-radius: var(--radius-6);

      & :where(.rt-BaseMenuItem) {
        gap: var(--component-gap-4);
        font-size: var(--font-size-3);
        line-height: var(--line-height-2);
        letter-spacing: var(--letter-spacing-3);
        border-radius: var(--radius-2);

        /* stylelint-disable-next-line selector-max-type */
        & :where(svg) {
          width: var(--content-icon-size-2);
          height: var(--content-icon-size-2);
          flex-shrink: 0;
        }
      }

      & :where(.rt-BaseMenuLabel) {
        font-size: var(--font-size-2);
        line-height: var(--line-height-2);
        letter-spacing: var(--letter-spacing-2);
        padding-left: calc(var(--base-menu-item-padding-left) + var(--component-gap-4));
      }

      & :where(.rt-BaseMenuItemIndicatorIcon, .rt-BaseMenuSubTriggerIcon) {
        width: var(--indicator-icon-size-2);
        height: var(--indicator-icon-size-2);
      }

      /* reset with :not:has so we still support browsers without :has */
      &:where(:not(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem))) {
        --base-menu-item-padding-left: var(--space-3);
      }
      &:where(:has(.rt-BaseMenuCheckboxItem, .rt-BaseMenuRadioItem)) {
        --base-menu-item-padding-left: var(--space-5);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/
.rt-BaseMenuItem:where([data-accent-color]) {
  color: var(--accent-a11);
}
.rt-BaseMenuItem:where([data-disabled]) {
  color: var(--gray-a8);
}
.rt-BaseMenuShortcut {
  color: var(--gray-a11);
}

/* Ensure gray text appears muted in non-highlighted state */
.rt-BaseMenuItem :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']:not(.rt-Badge)) {
  color: var(--gray-a10);
}
.rt-BaseMenuItem:where([data-disabled], [data-highlighted]),
.rt-BaseMenuSubTrigger:where([data-state='open']) {
  & :where(.rt-BaseMenuShortcut) {
    color: inherit;
  }
}
.rt-BaseMenuSeparator {
  background-color: var(--gray-a6);
}

/* solid and soft variants - consolidated to reduce duplication */

.rt-BaseMenuContent:where(.rt-variant-solid, .rt-variant-soft) {
  & :where(.rt-BaseMenuSubTrigger) {
    transition: var(--transition-menu);

    /* Enhanced reduced motion support */
    @media (prefers-reduced-motion: reduce) {
      transition: none;
      backdrop-filter: none; /* Remove backdrop effects for motion-sensitive users */
    }

    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition:
        background var(--motion-duration-micro) var(--motion-ease-standard),
        color var(--motion-duration-small) var(--motion-ease-standard);
    }
  }

  & :where(.rt-BaseMenuItem) {
    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition:
        background var(--motion-duration-micro) var(--motion-ease-standard),
        color var(--motion-duration-small) var(--motion-ease-standard);
    }
  }
}

/* solid variant specific styles */
.rt-BaseMenuContent:where(.rt-variant-solid) {
  & :where(.rt-BaseMenuSubTrigger[data-state='open']) {
    /* Base state: solid gray for solid panels */
    background-color: var(--gray-3);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--gray-a3);
      /* Remove individual backdrop-filter to prevent layering with container backdrop-filter */
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--gray-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--gray-a3);
      /* No backdrop-filter here to prevent double-blur with container */
    }
  }

  & :where(.rt-BaseMenuItem[data-highlighted]) {
    background-color: var(--accent-9);
    color: var(--accent-contrast);

    & :where(.rt-BaseMenuSubTriggerIcon) {
      color: var(--accent-contrast);
    }

    /* Force all text elements to inherit hover color, including those with color="gray" */
    & :where(.rt-Text) {
      color: inherit !important;
    }

    /* Also target any element with data-accent-color="gray" */
    & :where([data-accent-color='gray']:not(.rt-Badge)) {
      color: inherit !important;
    }
  }

  &:where(.rt-high-contrast) {
    & :where(.rt-BaseMenuItem[data-highlighted]) {
      background-color: var(--accent-12);
      color: var(--accent-1);

      & :where(.rt-BaseMenuSubTriggerIcon) {
        color: var(--accent-1);
      }

      /* Force all text elements to inherit hover color in high contrast mode */
      & :where(.rt-Text) {
        color: inherit !important;
      }

      /* Also target any element with data-accent-color="gray" in high contrast */
      & :where([data-accent-color='gray']:not(.rt-Badge)) {
        color: inherit !important;
      }

      &:where([data-accent-color]) {
        background-color: var(--accent-9);
        color: var(--accent-contrast);

        & :where(.rt-Text) {
          color: inherit !important;
        }

        & :where([data-accent-color='gray']:not(.rt-Badge)) {
          color: inherit !important;
        }
      }
    }
  }
}

/* soft variant specific styles */
.rt-BaseMenuContent:where(.rt-variant-soft) {
  & :where(.rt-BaseMenuSubTrigger[data-state='open']) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-3);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      /* Remove individual backdrop-filter to prevent layering with container backdrop-filter */
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      /* No backdrop-filter here to prevent double-blur with container */
    }
  }

  & :where(.rt-BaseMenuItem[data-highlighted]) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-4);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
      /* Remove individual backdrop-filter to prevent layering with container backdrop-filter */
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
      /* No backdrop-filter here to prevent double-blur with container */
    }

    /* In soft variant, improve contrast for gray text while maintaining hierarchy */
    & :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']:not(.rt-Badge)) {
      color: var(--gray-11) !important;
    }
  }
}

/* Forced colors support */
@media (forced-colors: active) {
  .rt-BaseMenuItem:where(:focus-visible) {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }

  .rt-BaseMenuContent {
    border: 1px solid CanvasText;
  }

  .rt-BaseMenuSeparator {
    background-color: CanvasText;
  }
}
