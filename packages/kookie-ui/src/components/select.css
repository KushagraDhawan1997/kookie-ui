.rt-SelectTrigger {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  flex-shrink: 0;
  user-select: none;
  vertical-align: top;
  line-height: var(--height);
  transition: var(--transition-select);

  font-family: var(--default-font-family);
  font-weight: var(--font-weight-regular);
  font-style: normal;
  text-align: start;

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  /* Prevent backdrop-filter stacking with parents */
  isolation: isolate;

  /* Component-level overrides */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }
  
  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  &:where(.rt-high-contrast) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--accent-12);
    }
  }

  /* Selected values use medium font weight */
  &:where(:not([data-placeholder])) {
    & :where(.rt-SelectTriggerInner) {
      font-weight: var(--font-weight-medium);
    }
  }

  &:where(:focus-visible) {
    outline: var(--focus-outline-width) solid var(--focus-8);
    outline-offset: var(--focus-outline-offset-inset);
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

.rt-SelectTriggerInner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.rt-SelectIcon {
  flex-shrink: 0;
  margin-left: auto;
  width: var(--trigger-icon-size-default);
  height: var(--trigger-icon-size-default);
}

.rt-SelectContent {
  --scrollarea-scrollbar-vertical-margin-top: var(--select-content-padding);
  --scrollarea-scrollbar-vertical-margin-bottom: var(--select-content-padding);
  --scrollarea-scrollbar-horizontal-margin-left: var(--select-content-padding);
  --scrollarea-scrollbar-horizontal-margin-right: var(--select-content-padding);

  overflow: hidden;
  background-color: var(--color-panel);
  backdrop-filter: var(--backdrop-filter-panel);
  box-shadow: var(--shadow-5);

  &:where([data-side]) {
    min-width: var(--radix-select-trigger-width);
    max-height: var(--radix-select-content-available-height);
    transform-origin: var(--radix-select-content-transform-origin);
  }
}

.rt-SelectViewport {
  box-sizing: border-box;
  padding: var(--select-content-padding);

  :where(.rt-SelectContent:has(.rt-ScrollAreaScrollbar[data-orientation='vertical'])) & {
    padding-right: var(--space-3);
  }
}

.rt-SelectItem {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  padding-left: var(--select-item-indicator-width);
  padding-right: var(--select-item-indicator-width);
  position: relative;
  box-sizing: border-box;
  outline: none;
  scroll-margin: var(--select-content-padding) 0;

  /* Fix sticky text highlighting after selection in Firefox */
  user-select: none;

  /* Cursors */
  cursor: var(--cursor-menu-item);
  &:where([data-disabled]) {
    cursor: default;
  }

  /* Allow rich content to expand height */
  &:where(.rt-SelectItemRich) {
    height: auto;
    min-height: var(--select-item-height);
    align-items: flex-start;
    padding-top: var(--space-2);
    padding-bottom: var(--space-2);
  }
}

.rt-SelectItemIndicator {
  position: absolute;
  left: 0;
  width: var(--select-item-indicator-width);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.rt-SelectSeparator {
  height: var(--separator-height-thin);
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
  margin-left: var(--select-item-indicator-width);
  margin-right: var(--select-separator-margin-right);
}

.rt-SelectLabel {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  padding-left: var(--select-item-indicator-width);
  padding-right: var(--select-item-indicator-width);
  color: var(--gray-a10);
  user-select: none;
  cursor: default;

  :where(.rt-SelectItem) + & {
    margin-top: var(--space-2);
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectTrigger {
  color: var(--gray-12);

  &:where(:not(.rt-variant-ghost)) {
    box-sizing: border-box;
    height: var(--select-trigger-height);
  }
  &:where(.rt-variant-ghost) {
    box-sizing: border-box;
    height: var(--select-trigger-height);
    padding: 0 var(--select-trigger-ghost-padding-x);


  }
}

@breakpoints {
  .rt-SelectTrigger {
    &:where(.rt-r-size-1) {
      --select-trigger-height: var(--space-5);
      gap: var(--component-gap-1);
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);
      border-radius: max(var(--radius-1), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-2);
        padding-right: var(--space-2);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-1);
        --select-trigger-ghost-padding-x: var(--space-2);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-1);
        height: var(--trigger-icon-size-1);
      }
    }
    &:where(.rt-r-size-2) {
      --select-trigger-height: var(--space-6);
      gap: var(--component-gap-2);
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);
      border-radius: max(var(--radius-2), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-3);
        padding-right: var(--space-3);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-2);
        --select-trigger-ghost-padding-x: var(--space-2);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-2);
        height: var(--trigger-icon-size-2);
      }
    }
    &:where(.rt-r-size-3) {
      --select-trigger-height: var(--space-7);
      gap: var(--component-gap-3);
      font-size: var(--font-size-3);
      line-height: var(--line-height-3);
      letter-spacing: var(--letter-spacing-3);
      border-radius: max(var(--radius-3), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-4);
        padding-right: var(--space-4);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-3);
        --select-trigger-ghost-padding-x: var(--space-3);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-3);
        height: var(--trigger-icon-size-3);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * CONTENT SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-SelectContent {
    &:where(.rt-r-size-1) {
      --select-content-padding: var(--space-1);
      --select-item-height: var(--space-5);
      --select-item-indicator-width: calc(var(--space-5) / var(--select-item-indicator-width-factor));
      --select-separator-margin-right: var(--space-2);
      border-radius: var(--radius-3);

      & :where(.rt-SelectLabel) {
        font-size: var(--font-size-1);
        letter-spacing: var(--letter-spacing-1);
        line-height: var(--line-height-1);
      }
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-1);
        line-height: var(--line-height-1);
        letter-spacing: var(--letter-spacing-1);
        border-radius: var(--radius-1);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: var(--select-indicator-icon-size-1);
        height: var(--select-indicator-icon-size-1);
      }
    }
    &:where(.rt-r-size-2, .rt-r-size-3) {
      --select-content-padding: var(--space-2);
      --select-item-height: var(--space-6);
      --select-item-indicator-width: var(--space-5);
      --select-separator-margin-right: var(--space-3);
      border-radius: var(--radius-4);

      & :where(.rt-SelectLabel) {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
        line-height: var(--line-height-2);
      }
      & :where(.rt-SelectItem) {
        line-height: var(--line-height-2);
        border-radius: var(--radius-2);
      }
    }
    &:where(.rt-r-size-2) {
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: var(--select-indicator-icon-size-2);
        height: var(--select-indicator-icon-size-2);
      }
    }
    &:where(.rt-r-size-3) {
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-3);
        letter-spacing: var(--letter-spacing-3);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: var(--select-indicator-icon-size-3);
        height: var(--select-indicator-icon-size-3);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER VARIANTS                                                                                *
 *                                                                                                 *
 ***************************************************************************************************/

/* classic */

.rt-SelectTrigger:where(.rt-variant-classic) {
  position: relative;
  top: var(--classic-elevation-offset);
  color: var(--accent-a11);
  background-color: var(--color-surface);
  box-shadow: var(--shadow-2);
  transition: var(--transition-text-field);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    background-color: var(--color-surface);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    background-color: var(--color-surface);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    background-color: var(--color-surface);
  }

  &:where(.rt-high-contrast) {
    background-color: var(--color-surface);

    /* Theme-level translucent override for high contrast */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: var(--color-surface);
    }

    /* Component-level overrides for high contrast */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--color-surface);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: var(--color-surface);
    }
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: 2px;
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-2);
      box-shadow: var(--shadow-2);

      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-2);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
      }
    }
  }

  &:where([data-state='open']) {
    background-color: var(--accent-3);
    box-shadow: var(--shadow-1);

    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }
  }

  &:where(:active:not([data-state='open'], [data-disabled])) {
    background-color: var(--accent-3);
    box-shadow: var(--shadow-1);

    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }
  }

  &:where(:disabled) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    box-shadow: none;
    outline: none;
    cursor: not-allowed;
    pointer-events: none;
    top: 0;
  }

  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
    }
  }
}

/* soft */

.rt-SelectTrigger:where(.rt-variant-soft) {
  /* Base state: solid accent for solid panels */
  background-color: var(--accent-3);
  color: var(--accent-a11);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    background-color: var(--accent-3);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--accent-8);
    outline-offset: -1px;
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-4);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-4);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
      }
    }
  }

  &:where([data-state='open']) {
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-4);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
    }
  }

  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-5);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a5), var(--accent-5) 60%);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-5);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a5), var(--accent-5) 60%);
    }
  }

  &:where(:disabled) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    cursor: not-allowed;
    pointer-events: none;
  }

  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--accent-a11);
      opacity: 0.6;
      font-weight: var(--font-weight-regular);
    }
  }
}

/* ghost */

.rt-SelectTrigger:where(.rt-variant-ghost) {
  background-color: transparent;
  color: var(--accent-a11);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
      font-weight: var(--font-weight-regular);
    }
  }

  @media (hover: hover) {
    &:where(:hover) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-3);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-3);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }

      /* Disable backdrop-filter when inside elements that already have backdrop-filter */
      /* :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
        backdrop-filter: none !important;
      } */
    }
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }

  &:where([data-state='open']) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-3);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    /* :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    } */
  }

  &:where(:active:not([data-state='open'])) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-4);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    /* :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    } */
  }

  &:where(:disabled) {
    color: var(--gray-a8);
    background-color: transparent;
    cursor: not-allowed;
    pointer-events: none;
  }
}

/* outline */

.rt-SelectTrigger:where(.rt-variant-outline) {
  /* Base state: solid colors for solid panels */
  box-shadow: inset 0 0 0 1px var(--accent-6);
  color: var(--accent-11);
  transition: var(--transition-background-blur);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    box-shadow: inset 0 0 0 1px var(--accent-a6);
    color: var(--accent-a11);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    box-shadow: inset 0 0 0 1px var(--accent-6);
    color: var(--accent-11);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    box-shadow: inset 0 0 0 1px var(--accent-a6);
    color: var(--accent-a11);
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 1px var(--accent-7);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-2);
        box-shadow: inset 0 0 0 1px var(--accent-7);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }
    }
  }

  &:where([data-state='open']) {
    background-color: var(--accent-2);
    box-shadow: inset 0 0 0 1px var(--accent-7);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a7);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 1px var(--accent-7);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a7);
    }
  }

  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-3);
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-8);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  &:where(:disabled) {
    color: var(--gray-a8);
    box-shadow: inset 0 0 0 1px var(--gray-a7);
    background-color: transparent;
    cursor: not-allowed;
    pointer-events: none;
  }

  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
      font-weight: var(--font-weight-regular);
    }
  }
}

/* surface */

.rt-SelectTrigger:where(.rt-variant-surface) {
  /* Base state: solid accent for solid panels */
  background-color: var(--accent-2);
  box-shadow: inset 0 0 0 1px var(--accent-6);
  color: var(--accent-a11);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
    box-shadow: inset 0 0 0 1px var(--accent-a6);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    background-color: var(--accent-2);
    box-shadow: inset 0 0 0 1px var(--accent-6);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
    box-shadow: inset 0 0 0 1px var(--accent-a6);
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-7);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-3);
        box-shadow: inset 0 0 0 1px var(--accent-7);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }
    }
  }

  &:where([data-state='open']) {
    background-color: var(--accent-3);
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-8);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }

  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-4);
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-4);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a4), var(--accent-4) 60%);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }

  &:where(:disabled) {
    color: var(--gray-a8);
    box-shadow: inset 0 0 0 1px var(--gray-a6);
    background-color: var(--gray-a2);
    cursor: not-allowed;
    pointer-events: none;
  }

  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
      font-weight: var(--font-weight-regular);
    }
  }
}

/* all disabled */
.rt-SelectTrigger {
  &:where(:disabled) {
    & :where(.rt-SelectIcon) {
      color: var(--gray-a9);
    }
  }
}

/* Error state styling */
.rt-SelectTrigger:where([data-error="true"]) {
  box-shadow: inset 0 0 0 1px var(--red-9);
}

.rt-SelectTrigger:where([data-error="true"]:focus-visible) {
  outline: 2px solid var(--red-8);
}

/* Loading state styling */
.rt-SelectLoadingIcon {
  animation: rt-spin 1s linear infinite;
}

.rt-SelectLoadingIconCircle {
  animation: rt-dash 1.5s ease-in-out infinite;
}

@keyframes rt-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes rt-dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .rt-SelectLoadingIcon,
  .rt-SelectLoadingIconCircle {
    animation: none;
  }
}

/* Forced colors support */
@media (forced-colors: active) {
  .rt-SelectTrigger:where([data-error="true"]) {
    border: 1px solid CanvasText;
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * MENU VARIANTS                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectItem:where([data-accent-color]) {
  color: var(--accent-a11);
}
.rt-SelectItem:where([data-disabled]) {
  color: var(--gray-a8);
}

.rt-SelectSeparator {
  background-color: var(--gray-a6);
}

/* Ensure gray text appears muted in non-highlighted state */
.rt-SelectItem :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']) {
  color: var(--gray-a10);
}

/* solid */

.rt-SelectContent:where(.rt-variant-solid) {
  & :where(.rt-SelectItem[data-highlighted]) {
    background-color: var(--accent-9);
    color: var(--accent-contrast);

    /* Force all text elements to inherit hover color, including those with color="gray" */
    & :where(.rt-Text) {
      color: inherit !important;
    }

    /* Also target any element with data-accent-color="gray" */
    & :where([data-accent-color='gray']) {
      color: inherit !important;
    }
  }
  &:where(.rt-high-contrast) {
    & :where(.rt-SelectItem[data-highlighted]) {
      background-color: var(--accent-12);
      color: var(--accent-1);

      /* Force all text elements to inherit hover color in high contrast mode */
      & :where(.rt-Text) {
        color: inherit !important;
      }

      /* Also target any element with data-accent-color="gray" in high contrast */
      & :where([data-accent-color='gray']) {
        color: inherit !important;
      }

      &:where([data-accent-color]) {
        background-color: var(--accent-9);
        color: var(--accent-contrast);

        & :where(.rt-Text) {
          color: inherit !important;
        }

        & :where([data-accent-color='gray']) {
          color: inherit !important;
        }
      }
    }
  }
}

/* soft */

.rt-SelectContent:where(.rt-variant-soft) {
  & :where(.rt-SelectItem[data-highlighted]) {
    background-color: var(--accent-a4);

    /* In soft variant, improve contrast for gray text while maintaining hierarchy */
    & :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']) {
      color: var(--gray-11) !important;
    }
  }
}
